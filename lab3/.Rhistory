wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(2, 5), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(2, 5), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(1, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(99, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(2, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(2, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
View(argument)
View(dane_treningowe)
View(dane_treningowe)
argument
wynik_funkcji
argument <-as.data.frame(runif(1000, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
argument <-as.data.frame(runif(1000, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
zeskalowane.argument
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 3))
wynik_funkcji <- cos(argument^2)
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
argument
argument
argument
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(3, 2), threshold = 0.01)
plot(net.price)
argument
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(100, 1), threshold = 0.01)
plot(net.price)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(1, 100), threshold = 0.01)
plot(net.price)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
argument <-as.data.frame(runif(100, min = 1, max = 100))
wynik_funkcji <- argument^3-2*argument
argument
wynik_funkcji
zeskalowane.argument <- as.data.frame(lapply(argument, normalize))
zeskalowane.argument
dane_treningowe <- cbind(zeskalowane.argument, wynik_funkcji)
colnames(dane_treningowe) <- c("Argument", "Wynik_funkcji")
net.price <- neuralnet(Wynik_funkcji~Argument, dane_treningowe, hidden = c(1, 20), threshold = 0.01)
plot(net.price)
nor <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
arg <-as.data.frame(runif(100, min = 1, max = 100))
wynik_f <- arg^3-2*arg
arg
wynik_f
skal.arg <- as.data.frame(lapply(arg, nor))
skal.arg
dane_t <- cbind(skal.arg, wynik_f)
colnames(dane_t) <- c("arg", "wynik_f")
net.price <- neuralnet(wynik_f~arg, dane_t, hidden = c(1, 100), threshold = 0.01)
plot(net.price)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
View(skal.arg)
View(tablety)
View(tablety)
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price <- neuralnet(cena~pamiec_RAM+pamiec_wbudowana+liczba_opini+oceny_klientów,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price <- neuralnet(cena~pamiec_RAM+pamiec_wbudowana+liczba_opini+oceny_klientów,
tablety, hidden = c(5,3,3), threshold = 0.01)
View(tablety)
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
net.price <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
tablety <- tablety[,-2]
tablety <- tablety[,-1]
tablety
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety <- tablety[,-4]
tablety <- tablety[,-1]
tablety
tablety <- tablety[,-6]
tablety <- tablety[,-1]
tablety
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
View(tablety)
View(tablety)
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price2 <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price2)
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
View(tablety)
cena <- normalize(tablety$cena)
cena
tablety
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
tablety[,2:5]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety, normalize))
tablety <- as.data.frame(lapply(tablety, normalize))
tablety <- cbind(tablety, cena)
tablety
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,2:5] <- as.data.frame(lapply(tablety[,2:5], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price2 <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price2)
View(tablety)
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-2]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-4]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-6]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-6]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-6]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-4]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety[,4:7] <- as.data.frame(lapply(tablety[,4:7], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price2 <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety <- tablety[,-5]
tablety <- tablety[,-1]
tablety
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety
tablety <- tablety[,-5]
tablety
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety
tablety1 <- tablety[,-5]
tablety1
tablety2 <- tablety1[,-1]
tablety2
View(tablety)
View(tablety)
View(tablety1)
View(tablety2)
View(tablety)
View(tablety1)
View(tablety2)
View(tablety)
View(tablety1)
View(tablety)
View(tablety1)
View(tablety)
View(tablety)
View(tablety1)
tablety <- read.csv("Tablety.csv")
View(tablety)
View(tablety1)
View(tablety)
View(tablety1)
View(tablety)
View(tablety1)
View(tablety)
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety
tablety1 <- tablety[,-7]
tablety1
tablety2 <- tablety1[,-1]
tablety2
View(tablety)
View(tablety1)
View(tablety)
View(tablety1)
View(tablety1)
View(tablety)
View(tablety)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety
tablety <- tablety[,-7]
tablety
tablety <- tablety[,-4]
tablety
tablety <- tablety[,-3]
tablety
tablety <- tablety[,-1]
tablety
View(tablety)
tablety[,4:7] <- as.data.frame(lapply(tablety[,4:7], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price2 <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price2)
q()
install.packages("neuralnet")
library("neuralnet")
nor <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
arg <-as.data.frame(runif(100, min = 1, max = 100))
wynik_f <- arg^3-2*arg
arg
wynik_f
skal.arg <- as.data.frame(lapply(arg, nor))
skal.arg
dane_t <- cbind(skal.arg, wynik_f)
colnames(dane_t) <- c("arg", "wynik_f")
net.price <- neuralnet(wynik_f~arg, dane_t, hidden = c(1, 100), threshold = 0.01)
install.packages("neuralnet")
install.packages("neuralnet")
library("neuralnet")
nor <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
arg <-as.data.frame(runif(100, min = 1, max = 100))
wynik_f <- arg^3-2*arg
arg
wynik_f
skal.arg <- as.data.frame(lapply(arg, nor))
skal.arg
dane_t <- cbind(skal.arg, wynik_f)
colnames(dane_t) <- c("arg", "wynik_f")
net.price <- neuralnet(wynik_f~arg, dane_t, hidden = c(1, 100), threshold = 0.01)
nor <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
arg <-as.data.frame(runif(100, min = 1, max = 100))
wynik_f <- arg^3-2*arg
arg
wynik_f
skal.arg <- as.data.frame(lapply(arg, nor))
skal.arg
dane_t <- cbind(skal.arg, wynik_f)
colnames(dane_t) <- c("arg", "wynik_f")
net.price <- neuralnet(wynik_f~arg, dane_t, hidden = c(1, 100), threshold = 0.01)
plot(net.price)
setwd("G:/APU/APu/lab3")
tablety <- read.csv("Tablety.csv")
cena <- normalize(tablety$cena)
cena
tablety
tablety <- tablety[,-7]
tablety
tablety <- tablety[,-4]
tablety
tablety <- tablety[,-3]
tablety
tablety <- tablety[,-1]
tablety
tablety[,4:7] <- as.data.frame(lapply(tablety[,4:7], normalize))
tablety <- cbind(tablety, cena)
tablety
net.price2 <- neuralnet(cena~pamiec_wbudowana+pamiec_RAM+liczba_opini+ocena,
tablety, hidden = c(5,3,3), threshold = 0.01)
plot(net.price2)
